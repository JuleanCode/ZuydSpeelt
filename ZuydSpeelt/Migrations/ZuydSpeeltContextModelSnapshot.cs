// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ZuydSpeelt;

#nullable disable

namespace ZuydSpeelt.Migrations
{
    [DbContext(typeof(ZuydSpeeltContext))]
    partial class ZuydSpeeltContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ZuydSpeelt.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Name = "bypass"
                        },
                        new
                        {
                            Id = 12,
                            Name = "parse"
                        },
                        new
                        {
                            Id = 13,
                            Name = "quantify"
                        },
                        new
                        {
                            Id = 14,
                            Name = "program"
                        },
                        new
                        {
                            Id = 15,
                            Name = "generate"
                        },
                        new
                        {
                            Id = 16,
                            Name = "parse"
                        },
                        new
                        {
                            Id = 17,
                            Name = "bypass"
                        },
                        new
                        {
                            Id = 18,
                            Name = "reboot"
                        },
                        new
                        {
                            Id = 19,
                            Name = "synthesize"
                        },
                        new
                        {
                            Id = 20,
                            Name = "transmit"
                        },
                        new
                        {
                            Id = 61,
                            Name = "input"
                        },
                        new
                        {
                            Id = 62,
                            Name = "compress"
                        },
                        new
                        {
                            Id = 63,
                            Name = "quantify"
                        },
                        new
                        {
                            Id = 64,
                            Name = "generate"
                        },
                        new
                        {
                            Id = 65,
                            Name = "navigate"
                        },
                        new
                        {
                            Id = 66,
                            Name = "compress"
                        },
                        new
                        {
                            Id = 67,
                            Name = "compress"
                        },
                        new
                        {
                            Id = 68,
                            Name = "back up"
                        },
                        new
                        {
                            Id = 69,
                            Name = "input"
                        },
                        new
                        {
                            Id = 70,
                            Name = "compress"
                        });
                });

            modelBuilder.Entity("ZuydSpeelt.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2023, 6, 6, 22, 7, 48, 89, DateTimeKind.Local).AddTicks(2124),
                            GameId = 3,
                            Text = "You can't back up the program without indexing the wireless SAS program!",
                            UserId = 6
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2023, 6, 7, 3, 40, 55, 418, DateTimeKind.Local).AddTicks(2337),
                            GameId = 5,
                            Text = "We need to back up the mobile SAS transmitter!",
                            UserId = 10
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2023, 6, 6, 23, 22, 9, 663, DateTimeKind.Local).AddTicks(4822),
                            GameId = 1,
                            Text = "We need to back up the online ADP circuit!",
                            UserId = 9
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2023, 6, 6, 15, 0, 37, 336, DateTimeKind.Local).AddTicks(4672),
                            GameId = 3,
                            Text = "The CSS bus is down, override the multi-byte bus so we can override the CSS bus!",
                            UserId = 4
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2023, 6, 6, 19, 56, 19, 908, DateTimeKind.Local).AddTicks(6511),
                            GameId = 10,
                            Text = "I'll connect the neural CSS bandwidth, that should bandwidth the CSS bandwidth!",
                            UserId = 10
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2023, 6, 7, 0, 4, 18, 544, DateTimeKind.Local).AddTicks(2366),
                            GameId = 10,
                            Text = "Try to connect the PNG alarm, maybe it will connect the neural alarm!",
                            UserId = 6
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2023, 6, 7, 5, 16, 28, 256, DateTimeKind.Local).AddTicks(3836),
                            GameId = 7,
                            Text = "I'll index the online ADP sensor, that should sensor the ADP sensor!",
                            UserId = 10
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2023, 6, 7, 4, 1, 32, 404, DateTimeKind.Local).AddTicks(6337),
                            GameId = 2,
                            Text = "You can't input the card without synthesizing the neural EXE card!",
                            UserId = 8
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2023, 6, 7, 5, 52, 27, 820, DateTimeKind.Local).AddTicks(9197),
                            GameId = 9,
                            Text = "Try to calculate the HDD sensor, maybe it will calculate the bluetooth sensor!",
                            UserId = 10
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2023, 6, 7, 9, 4, 56, 142, DateTimeKind.Local).AddTicks(5716),
                            GameId = 9,
                            Text = "Use the optical THX bandwidth, then you can transmit the optical bandwidth!",
                            UserId = 6
                        },
                        new
                        {
                            Id = 81,
                            CreatedAt = new DateTime(2023, 6, 7, 2, 58, 42, 740, DateTimeKind.Local).AddTicks(8732),
                            GameId = 15,
                            Text = "We need to index the online XML circuit!",
                            UserId = 5
                        },
                        new
                        {
                            Id = 82,
                            CreatedAt = new DateTime(2023, 6, 6, 19, 28, 4, 275, DateTimeKind.Local).AddTicks(8185),
                            GameId = 8,
                            Text = "We need to generate the back-end ADP monitor!",
                            UserId = 13
                        },
                        new
                        {
                            Id = 83,
                            CreatedAt = new DateTime(2023, 6, 6, 15, 4, 59, 300, DateTimeKind.Local).AddTicks(708),
                            GameId = 3,
                            Text = "We need to override the 1080p XSS microchip!",
                            UserId = 8
                        },
                        new
                        {
                            Id = 84,
                            CreatedAt = new DateTime(2023, 6, 7, 3, 52, 20, 271, DateTimeKind.Local).AddTicks(9410),
                            GameId = 1,
                            Text = "Try to parse the RSS alarm, maybe it will parse the solid state alarm!",
                            UserId = 8
                        },
                        new
                        {
                            Id = 85,
                            CreatedAt = new DateTime(2023, 6, 6, 16, 52, 34, 571, DateTimeKind.Local).AddTicks(7284),
                            GameId = 17,
                            Text = "The HTTP alarm is down, connect the wireless alarm so we can connect the HTTP alarm!",
                            UserId = 16
                        },
                        new
                        {
                            Id = 86,
                            CreatedAt = new DateTime(2023, 6, 7, 10, 16, 43, 798, DateTimeKind.Local).AddTicks(7526),
                            GameId = 15,
                            Text = "If we calculate the hard drive, we can get to the JSON hard drive through the bluetooth JSON hard drive!",
                            UserId = 5
                        },
                        new
                        {
                            Id = 87,
                            CreatedAt = new DateTime(2023, 6, 7, 5, 6, 44, 731, DateTimeKind.Local).AddTicks(3799),
                            GameId = 10,
                            Text = "If we back up the driver, we can get to the COM driver through the multi-byte COM driver!",
                            UserId = 16
                        },
                        new
                        {
                            Id = 88,
                            CreatedAt = new DateTime(2023, 6, 7, 12, 3, 22, 766, DateTimeKind.Local).AddTicks(8199),
                            GameId = 18,
                            Text = "We need to parse the neural PNG microchip!",
                            UserId = 19
                        },
                        new
                        {
                            Id = 89,
                            CreatedAt = new DateTime(2023, 6, 7, 11, 16, 36, 204, DateTimeKind.Local).AddTicks(5308),
                            GameId = 5,
                            Text = "We need to back up the optical IB circuit!",
                            UserId = 3
                        },
                        new
                        {
                            Id = 90,
                            CreatedAt = new DateTime(2023, 6, 7, 7, 25, 17, 609, DateTimeKind.Local).AddTicks(7122),
                            GameId = 17,
                            Text = "Use the primary RSS protocol, then you can bypass the primary protocol!",
                            UserId = 11
                        });
                });

            modelBuilder.Entity("ZuydSpeelt.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Popularity")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Game");

                    b.HasData(
                        new
                        {
                            Id = 21,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 7, 0, 32, 11, 372, DateTimeKind.Local).AddTicks(4964),
                            Popularity = 4,
                            Title = "programming the system won't do anything, we need to generate the redundant ADP system!"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 7, 10, 17, 29, 273, DateTimeKind.Local).AddTicks(5508),
                            Popularity = 2,
                            Title = "You can't quantify the system without synthesizing the online FTP system!"
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 7, 4, 10, 51, 818, DateTimeKind.Local).AddTicks(985),
                            Popularity = 1,
                            Title = "The GB card is down, parse the digital card so we can parse the GB card!"
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 7, 0, 12, 10, 288, DateTimeKind.Local).AddTicks(6156),
                            Popularity = 4,
                            Title = "Use the neural EXE sensor, then you can navigate the neural sensor!"
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 7, 0, 10, 43, 295, DateTimeKind.Local).AddTicks(2461),
                            Popularity = 2,
                            Title = "If we synthesize the sensor, we can get to the FTP sensor through the auxiliary FTP sensor!"
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 6, 18, 30, 14, 477, DateTimeKind.Local).AddTicks(7723),
                            Popularity = 1,
                            Title = "Use the virtual AGP hard drive, then you can connect the virtual hard drive!"
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 7, 7, 44, 11, 179, DateTimeKind.Local).AddTicks(6108),
                            Popularity = 3,
                            Title = "The GB circuit is down, calculate the digital circuit so we can calculate the GB circuit!"
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 7, 3, 5, 29, 548, DateTimeKind.Local).AddTicks(4516),
                            Popularity = 1,
                            Title = "We need to navigate the 1080p ADP panel!"
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 7, 9, 7, 49, 897, DateTimeKind.Local).AddTicks(2787),
                            Popularity = 1,
                            Title = "transmitting the array won't do anything, we need to hack the haptic CSS array!"
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 7, 10, 2, 11, 817, DateTimeKind.Local).AddTicks(8206),
                            Popularity = 5,
                            Title = "Try to generate the GB application, maybe it will generate the open-source application!"
                        },
                        new
                        {
                            Id = 71,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 6, 17, 8, 3, 57, DateTimeKind.Local).AddTicks(3136),
                            Popularity = 1,
                            Title = "You can't program the matrix without calculating the optical SSL matrix!"
                        },
                        new
                        {
                            Id = 72,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 7, 0, 23, 32, 787, DateTimeKind.Local).AddTicks(1917),
                            Popularity = 1,
                            Title = "Use the virtual USB matrix, then you can transmit the virtual matrix!"
                        },
                        new
                        {
                            Id = 73,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 6, 16, 30, 28, 954, DateTimeKind.Local).AddTicks(8655),
                            Popularity = 5,
                            Title = "Use the digital GB sensor, then you can compress the digital sensor!"
                        },
                        new
                        {
                            Id = 74,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 7, 10, 28, 11, 552, DateTimeKind.Local).AddTicks(378),
                            Popularity = 3,
                            Title = "If we transmit the monitor, we can get to the FTP monitor through the back-end FTP monitor!"
                        },
                        new
                        {
                            Id = 75,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 6, 20, 50, 58, 133, DateTimeKind.Local).AddTicks(8327),
                            Popularity = 1,
                            Title = "The PNG array is down, bypass the virtual array so we can bypass the PNG array!"
                        },
                        new
                        {
                            Id = 76,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 7, 3, 17, 50, 295, DateTimeKind.Local).AddTicks(8261),
                            Popularity = 3,
                            Title = "I'll override the mobile PCI firewall, that should firewall the PCI firewall!"
                        },
                        new
                        {
                            Id = 77,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 6, 19, 3, 15, 368, DateTimeKind.Local).AddTicks(9531),
                            Popularity = 5,
                            Title = "You can't bypass the circuit without transmitting the multi-byte RSS circuit!"
                        },
                        new
                        {
                            Id = 78,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 7, 3, 45, 33, 836, DateTimeKind.Local).AddTicks(2578),
                            Popularity = 1,
                            Title = "The RSS panel is down, bypass the cross-platform panel so we can bypass the RSS panel!"
                        },
                        new
                        {
                            Id = 79,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 7, 12, 30, 4, 487, DateTimeKind.Local).AddTicks(6813),
                            Popularity = 1,
                            Title = "Try to reboot the ADP bandwidth, maybe it will reboot the back-end bandwidth!"
                        },
                        new
                        {
                            Id = 80,
                            CategoryId = 0,
                            CreatedAt = new DateTime(2023, 6, 7, 14, 13, 17, 572, DateTimeKind.Local).AddTicks(1935),
                            Popularity = 4,
                            Title = "The XSS driver is down, synthesize the auxiliary driver so we can synthesize the XSS driver!"
                        });
                });

            modelBuilder.Entity("ZuydSpeelt.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Rating");

                    b.HasData(
                        new
                        {
                            Id = 41,
                            GameId = 2,
                            UserId = 2,
                            Value = 2
                        },
                        new
                        {
                            Id = 42,
                            GameId = 2,
                            UserId = 2,
                            Value = 3
                        },
                        new
                        {
                            Id = 43,
                            GameId = 1,
                            UserId = 4,
                            Value = 2
                        },
                        new
                        {
                            Id = 44,
                            GameId = 1,
                            UserId = 5,
                            Value = 3
                        },
                        new
                        {
                            Id = 45,
                            GameId = 8,
                            UserId = 10,
                            Value = 4
                        },
                        new
                        {
                            Id = 46,
                            GameId = 5,
                            UserId = 2,
                            Value = 5
                        },
                        new
                        {
                            Id = 47,
                            GameId = 8,
                            UserId = 6,
                            Value = 5
                        },
                        new
                        {
                            Id = 48,
                            GameId = 1,
                            UserId = 8,
                            Value = 5
                        },
                        new
                        {
                            Id = 49,
                            GameId = 4,
                            UserId = 10,
                            Value = 1
                        },
                        new
                        {
                            Id = 50,
                            GameId = 8,
                            UserId = 7,
                            Value = 4
                        },
                        new
                        {
                            Id = 91,
                            GameId = 9,
                            UserId = 18,
                            Value = 2
                        },
                        new
                        {
                            Id = 92,
                            GameId = 13,
                            UserId = 6,
                            Value = 5
                        },
                        new
                        {
                            Id = 93,
                            GameId = 10,
                            UserId = 15,
                            Value = 1
                        },
                        new
                        {
                            Id = 94,
                            GameId = 20,
                            UserId = 11,
                            Value = 5
                        },
                        new
                        {
                            Id = 95,
                            GameId = 5,
                            UserId = 4,
                            Value = 4
                        },
                        new
                        {
                            Id = 96,
                            GameId = 19,
                            UserId = 10,
                            Value = 5
                        },
                        new
                        {
                            Id = 97,
                            GameId = 2,
                            UserId = 12,
                            Value = 4
                        },
                        new
                        {
                            Id = 98,
                            GameId = 19,
                            UserId = 8,
                            Value = 1
                        },
                        new
                        {
                            Id = 99,
                            GameId = 20,
                            UserId = 14,
                            Value = 5
                        },
                        new
                        {
                            Id = 100,
                            GameId = 19,
                            UserId = 19,
                            Value = 3
                        });
                });

            modelBuilder.Entity("ZuydSpeelt.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 6, 6, 21, 27, 14, 244, DateTimeKind.Local).AddTicks(1560),
                            Email = "Jena_Gleason7@yahoo.com",
                            Password = "bypass",
                            Username = "Breanne"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 6, 6, 16, 56, 14, 933, DateTimeKind.Local).AddTicks(8343),
                            Email = "Heath_Walker@gmail.com",
                            Password = "quantify",
                            Username = "Jayden"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 6, 6, 18, 40, 32, 713, DateTimeKind.Local).AddTicks(3291),
                            Email = "Lillie93@gmail.com",
                            Password = "calculate",
                            Username = "Renee"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 6, 7, 2, 13, 22, 626, DateTimeKind.Local).AddTicks(3708),
                            Email = "Rachelle_Rutherford@gmail.com",
                            Password = "back up",
                            Username = "Demario"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 6, 7, 14, 5, 14, 3, DateTimeKind.Local).AddTicks(2733),
                            Email = "Bridgette_Wiegand72@yahoo.com",
                            Password = "copy",
                            Username = "D'angelo"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 6, 7, 13, 43, 42, 156, DateTimeKind.Local).AddTicks(8328),
                            Email = "Einar42@gmail.com",
                            Password = "index",
                            Username = "Uriah"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 6, 7, 12, 58, 59, 625, DateTimeKind.Local).AddTicks(3739),
                            Email = "Keshawn_Hane49@gmail.com",
                            Password = "program",
                            Username = "Stephon"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 6, 7, 2, 28, 44, 104, DateTimeKind.Local).AddTicks(7865),
                            Email = "Vinnie47@yahoo.com",
                            Password = "back up",
                            Username = "Alford"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 6, 6, 17, 12, 17, 176, DateTimeKind.Local).AddTicks(8014),
                            Email = "Edyth_Sauer41@yahoo.com",
                            Password = "input",
                            Username = "Rosalyn"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 6, 7, 13, 54, 9, 269, DateTimeKind.Local).AddTicks(905),
                            Email = "Ellis_Hodkiewicz@gmail.com",
                            Password = "index",
                            Username = "Ruby"
                        },
                        new
                        {
                            Id = 51,
                            CreatedAt = new DateTime(2023, 6, 6, 16, 52, 24, 353, DateTimeKind.Local).AddTicks(4691),
                            Email = "Sallie_Little@hotmail.com",
                            Password = "quantify",
                            Username = "Emmalee"
                        },
                        new
                        {
                            Id = 52,
                            CreatedAt = new DateTime(2023, 6, 7, 10, 14, 3, 802, DateTimeKind.Local).AddTicks(3227),
                            Email = "Alfred_Schowalter31@hotmail.com",
                            Password = "transmit",
                            Username = "Cesar"
                        },
                        new
                        {
                            Id = 53,
                            CreatedAt = new DateTime(2023, 6, 7, 7, 38, 12, 680, DateTimeKind.Local).AddTicks(3141),
                            Email = "Mia99@hotmail.com",
                            Password = "navigate",
                            Username = "Alia"
                        },
                        new
                        {
                            Id = 54,
                            CreatedAt = new DateTime(2023, 6, 7, 5, 37, 43, 986, DateTimeKind.Local).AddTicks(1511),
                            Email = "Curt.Watsica0@yahoo.com",
                            Password = "compress",
                            Username = "Joanie"
                        },
                        new
                        {
                            Id = 55,
                            CreatedAt = new DateTime(2023, 6, 6, 17, 0, 18, 793, DateTimeKind.Local).AddTicks(9122),
                            Email = "Herman66@gmail.com",
                            Password = "reboot",
                            Username = "Liza"
                        },
                        new
                        {
                            Id = 56,
                            CreatedAt = new DateTime(2023, 6, 6, 22, 26, 12, 71, DateTimeKind.Local).AddTicks(3703),
                            Email = "Dorothy_Yost60@yahoo.com",
                            Password = "quantify",
                            Username = "Marquise"
                        },
                        new
                        {
                            Id = 57,
                            CreatedAt = new DateTime(2023, 6, 6, 21, 35, 27, 549, DateTimeKind.Local).AddTicks(289),
                            Email = "Declan91@yahoo.com",
                            Password = "generate",
                            Username = "Delia"
                        },
                        new
                        {
                            Id = 58,
                            CreatedAt = new DateTime(2023, 6, 6, 15, 26, 10, 763, DateTimeKind.Local).AddTicks(8628),
                            Email = "Nichole74@gmail.com",
                            Password = "index",
                            Username = "Lou"
                        },
                        new
                        {
                            Id = 59,
                            CreatedAt = new DateTime(2023, 6, 7, 14, 5, 28, 13, DateTimeKind.Local).AddTicks(8702),
                            Email = "Sophie_Koss@hotmail.com",
                            Password = "copy",
                            Username = "Vesta"
                        },
                        new
                        {
                            Id = 60,
                            CreatedAt = new DateTime(2023, 6, 6, 19, 5, 57, 32, DateTimeKind.Local).AddTicks(8300),
                            Email = "Domenick.Turner@hotmail.com",
                            Password = "back up",
                            Username = "Tyrel"
                        });
                });

            modelBuilder.Entity("ZuydSpeelt.UserGame", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "GameId", "CreatedAt");

                    b.HasIndex("GameId");

                    b.ToTable("UserGame");

                    b.HasData(
                        new
                        {
                            UserId = 4,
                            GameId = 8,
                            CreatedAt = new DateTime(2023, 6, 7, 12, 6, 5, 267, DateTimeKind.Local).AddTicks(6811),
                            Score = 6
                        },
                        new
                        {
                            UserId = 10,
                            GameId = 7,
                            CreatedAt = new DateTime(2023, 6, 6, 19, 13, 21, 325, DateTimeKind.Local).AddTicks(393),
                            Score = 2
                        },
                        new
                        {
                            UserId = 5,
                            GameId = 5,
                            CreatedAt = new DateTime(2023, 6, 7, 13, 35, 22, 289, DateTimeKind.Local).AddTicks(4768),
                            Score = 9
                        },
                        new
                        {
                            UserId = 1,
                            GameId = 9,
                            CreatedAt = new DateTime(2023, 6, 6, 20, 12, 40, 749, DateTimeKind.Local).AddTicks(373),
                            Score = 8
                        },
                        new
                        {
                            UserId = 6,
                            GameId = 3,
                            CreatedAt = new DateTime(2023, 6, 7, 8, 23, 43, 820, DateTimeKind.Local).AddTicks(5432),
                            Score = 5
                        },
                        new
                        {
                            UserId = 4,
                            GameId = 6,
                            CreatedAt = new DateTime(2023, 6, 6, 20, 0, 15, 656, DateTimeKind.Local).AddTicks(7107),
                            Score = 7
                        },
                        new
                        {
                            UserId = 8,
                            GameId = 4,
                            CreatedAt = new DateTime(2023, 6, 7, 7, 47, 47, 719, DateTimeKind.Local).AddTicks(7559),
                            Score = 10
                        },
                        new
                        {
                            UserId = 5,
                            GameId = 7,
                            CreatedAt = new DateTime(2023, 6, 7, 7, 54, 49, 685, DateTimeKind.Local).AddTicks(2660),
                            Score = 10
                        },
                        new
                        {
                            UserId = 2,
                            GameId = 6,
                            CreatedAt = new DateTime(2023, 6, 7, 9, 25, 3, 438, DateTimeKind.Local).AddTicks(6620),
                            Score = 9
                        },
                        new
                        {
                            UserId = 8,
                            GameId = 1,
                            CreatedAt = new DateTime(2023, 6, 7, 7, 56, 49, 496, DateTimeKind.Local).AddTicks(7502),
                            Score = 6
                        },
                        new
                        {
                            UserId = 16,
                            GameId = 14,
                            CreatedAt = new DateTime(2023, 6, 6, 14, 43, 14, 123, DateTimeKind.Local).AddTicks(9824),
                            Score = 8
                        },
                        new
                        {
                            UserId = 2,
                            GameId = 20,
                            CreatedAt = new DateTime(2023, 6, 7, 10, 7, 47, 794, DateTimeKind.Local).AddTicks(3106),
                            Score = 2
                        },
                        new
                        {
                            UserId = 4,
                            GameId = 6,
                            CreatedAt = new DateTime(2023, 6, 7, 11, 18, 0, 584, DateTimeKind.Local).AddTicks(2362),
                            Score = 9
                        },
                        new
                        {
                            UserId = 6,
                            GameId = 9,
                            CreatedAt = new DateTime(2023, 6, 7, 11, 43, 24, 977, DateTimeKind.Local).AddTicks(8758),
                            Score = 2
                        },
                        new
                        {
                            UserId = 2,
                            GameId = 10,
                            CreatedAt = new DateTime(2023, 6, 7, 5, 48, 16, 687, DateTimeKind.Local).AddTicks(258),
                            Score = 4
                        },
                        new
                        {
                            UserId = 15,
                            GameId = 4,
                            CreatedAt = new DateTime(2023, 6, 7, 4, 1, 5, 665, DateTimeKind.Local).AddTicks(1614),
                            Score = 7
                        },
                        new
                        {
                            UserId = 12,
                            GameId = 6,
                            CreatedAt = new DateTime(2023, 6, 7, 10, 49, 8, 156, DateTimeKind.Local).AddTicks(9273),
                            Score = 9
                        },
                        new
                        {
                            UserId = 15,
                            GameId = 8,
                            CreatedAt = new DateTime(2023, 6, 6, 21, 5, 2, 501, DateTimeKind.Local).AddTicks(9255),
                            Score = 6
                        },
                        new
                        {
                            UserId = 3,
                            GameId = 4,
                            CreatedAt = new DateTime(2023, 6, 6, 15, 39, 51, 344, DateTimeKind.Local).AddTicks(9291),
                            Score = 8
                        },
                        new
                        {
                            UserId = 14,
                            GameId = 15,
                            CreatedAt = new DateTime(2023, 6, 6, 19, 24, 48, 600, DateTimeKind.Local).AddTicks(3912),
                            Score = 7
                        });
                });

            modelBuilder.Entity("ZuydSpeelt.Comment", b =>
                {
                    b.HasOne("ZuydSpeelt.Game", "Game")
                        .WithMany("Comments")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZuydSpeelt.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ZuydSpeelt.Game", b =>
                {
                    b.HasOne("ZuydSpeelt.Category", "Category")
                        .WithMany("Games")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ZuydSpeelt.Rating", b =>
                {
                    b.HasOne("ZuydSpeelt.Game", "Game")
                        .WithMany("Ratings")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZuydSpeelt.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ZuydSpeelt.UserGame", b =>
                {
                    b.HasOne("ZuydSpeelt.Game", "Game")
                        .WithMany("UserGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZuydSpeelt.User", "User")
                        .WithMany("UserGames")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ZuydSpeelt.Category", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("ZuydSpeelt.Game", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Ratings");

                    b.Navigation("UserGames");
                });

            modelBuilder.Entity("ZuydSpeelt.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Ratings");

                    b.Navigation("UserGames");
                });
#pragma warning restore 612, 618
        }
    }
}
